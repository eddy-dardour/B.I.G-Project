{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eddy Dardour\\\\Desktop\\\\ReactApp3\\\\bigproject\\\\bigproject\\\\src\\\\components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { animated, useTransition } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  const [fetchedData, setData] = useState(null);\n  const [cityChosed, setCity] = useState(\"\");\n  const [isOpen, setOpen] = useState(false);\n  const transition = useTransition(isOpen, {\n    from: {},\n    enter: {},\n    leave: {}\n  });\n  useEffect(() => {\n    Check();\n  });\n\n  const LoadData = async link => {\n    const response = await fetch(link);\n    const data = await response.json();\n    setData(data);\n    console.log(data);\n  };\n\n  function Check() {\n    switch (cityChosed) {\n      case \"Paris\":\n        LoadData(\"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=Paris\");\n        setCity(\"\");\n        break;\n\n      case \"Marseille\":\n        LoadData(\"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=Marseille\");\n        setCity(\"\");\n        break;\n\n      case \"NewYork\":\n        LoadData(\"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=New_York\");\n        setCity(\"\");\n        break;\n\n      default:\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: \"No weather information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this);\n\n    }\n  }\n\n  const Div1 = styled.div`\n    background-color: red;\n  `;\n  const Div2 = styled.div`\n    background-color: green;\n    border-radius: 15px;\n  `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setOpen(!isOpen),\n      children: transition((style, item) => item ? /*#__PURE__*/_jsxDEV(animated.div, {\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(Div1, {\n          children: \"Open the city selector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(animated.div, {\n        style: style,\n        children: [\"Close city selector\", /*#__PURE__*/_jsxDEV(Div2, {\n          onClick: () => setCity(\"Paris\"),\n          children: \"Paris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Div2, {\n          onClick: () => setCity(\"NewYork\"),\n          children: \"New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Div2, {\n          onClick: () => setCity(\"Marseille\"),\n          children: \"Marseille\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (() => {\n        switch (cityChosed) {\n          case \"Paris\":\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: fetchedData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this);\n\n            break;\n\n          case \"Marseille\":\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this);\n\n            break;\n\n          case \"NewYork\":\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this);\n\n            break;\n\n          default:\n            return;\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Weather, \"xmVzNWfyJyiAarngYFuEyx5FELs=\", false, function () {\n  return [useTransition];\n});\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/Eddy Dardour/Desktop/ReactApp3/bigproject/bigproject/src/components/Weather.js"],"names":["React","useState","useEffect","animated","useTransition","styled","Weather","fetchedData","setData","cityChosed","setCity","isOpen","setOpen","transition","from","enter","leave","Check","LoadData","link","response","fetch","data","json","console","log","Div1","div","Div2","style","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\nexport default function Weather() {\r\n  const [fetchedData, setData] = useState(null);\r\n  const [cityChosed, setCity] = useState(\"\");\r\n  const [isOpen, setOpen] = useState(false);\r\n  const transition = useTransition(isOpen, {\r\n    from: {},\r\n    enter: {},\r\n    leave: {},\r\n  });\r\n  useEffect(() => {\r\n    Check();\r\n  });\r\n\r\n  const LoadData = async (link) => {\r\n    const response = await fetch(link);\r\n    const data = await response.json();\r\n    setData(data);\r\n    console.log(data);\r\n  };\r\n\r\n  function Check() {\r\n    switch (cityChosed) {\r\n      case \"Paris\":\r\n        LoadData(\r\n          \"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=Paris\"\r\n        );\r\n        setCity(\"\");\r\n        break;\r\n      case \"Marseille\":\r\n        LoadData(\r\n          \"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=Marseille\"\r\n        );\r\n        setCity(\"\");\r\n        break;\r\n      case \"NewYork\":\r\n        LoadData(\r\n          \"http://api.weatherapi.com/v1/current.json?key=daa4b9c78d874472a60150746211812&lang=fr&q=New_York\"\r\n        );\r\n        setCity(\"\");\r\n        break;\r\n      default:\r\n        <div>No weather information</div>;\r\n    }\r\n  }\r\n\r\n  const Div1 = styled.div`\r\n    background-color: red;\r\n  `;\r\n  const Div2 = styled.div`\r\n    background-color: green;\r\n    border-radius: 15px;\r\n  `;\r\n  return (\r\n    <>\r\n      <div onClick={() => setOpen(!isOpen)}>\r\n        {transition((style, item) =>\r\n          item ? (\r\n            <animated.div style={style}>\r\n              <Div1>Open the city selector</Div1>\r\n            </animated.div>\r\n          ) : (\r\n            <animated.div style={style}>\r\n              Close city selector\r\n              <Div2 onClick={() => setCity(\"Paris\")}>Paris</Div2>\r\n              <Div2 onClick={() => setCity(\"NewYork\")}>New York</Div2>\r\n              <Div2 onClick={() => setCity(\"Marseille\")}>Marseille</Div2>\r\n            </animated.div>\r\n          )\r\n        )}\r\n      </div>\r\n      <div>\r\n        {(() => {\r\n          switch (cityChosed) {\r\n            case \"Paris\":\r\n              <div>{fetchedData}</div>;\r\n              break;\r\n            case \"Marseille\":\r\n              <div>2</div>;\r\n              break;\r\n            case \"NewYork\":\r\n              <div>3</div>;\r\n              break;\r\n            default:\r\n              return;\r\n          }\r\n        })()}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}